@using System.Security.Claims
@inherits LayoutComponentBase
<RadzenComponents @rendermode="InteractiveServer" />
@inject ILocalStorageService _localStorageService
@inject NavigationManager _navigationManager

<RadzenLayout Style="grid-template-areas: 'rz-sidebar rz-header' 'rz-sidebar rz-body'">
    <RadzenHeader>
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" Gap="0">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
                <RadzenSidebarToggle Click="@(() => sidebarExpanded = !sidebarExpanded)" />
                <AuthorizeView>
                    <Authorized>
                        @foreach (var claim in @context.User.Claims.Where(c => c.Type.Equals(ClaimTypes.Email)))
                        {
                            <RadzenText Style="color: white;margin-bottom:0;">Usuário: @claim.Value</RadzenText>
                        }
                    </Authorized>
                </AuthorizeView>
            </RadzenStack>

            <RadzenButton Icon="exit_to_app" ButtonStyle="ButtonStyle.Primary" Variant="Variant.Flat" Text="Sair" Click="@HandleLogout" />
        </RadzenStack>
    </RadzenHeader>
    <RadzenSidebar @bind-Expanded="@sidebarExpanded">
        <RadzenPanelMenu>
            <RadzenPanelMenuItem Text="Tarefas" Icon="home" Path="/todos" />
            <RadzenPanelMenuItem Text="Usuários" Icon="account_box">
                <RadzenPanelMenuItem Text="Listar usuários" Icon="list" Path="/users" />
                <RadzenPanelMenuItem Text="Cadastrar usuários" Icon="note_add" />
            </RadzenPanelMenuItem>
        </RadzenPanelMenu>      
        
    </RadzenSidebar>
    <RadzenBody Style="padding:50px 150px">
        @Body       
    </RadzenBody>
</RadzenLayout>

@code {
    bool sidebarExpanded = true;

    public async void HandleLogout()
    {
        await _localStorageService.RemoveItemAsync("accessToken");
        _navigationManager.NavigateTo("/login");
    }
}
